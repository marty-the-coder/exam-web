#!/bin/bash

# Fetch list of cities
cities=$(curl -s "https://nicolbus.folk.ntnu.no/cities")

# Randomly select a city from the list
city=$(echo "$cities" | tr -d '[],"' | tr -s ' ' '\n' | shuf -n 1)

# Get the current temperature for the randomly selected city (you can use a weather API for this)
# Note: You'll need to replace "YOUR_API_KEY" with a valid API key from a weather service like OpenWeatherMap
weather_data=$(curl -s "https://api.openweathermap.org/data/2.5/weather?q=$city&appid=YOUR_API_KEY&units=metric")
temp=$(echo "$weather_data" | jq '.main.temp')

# Generate the HTML response
echo "Content-type: text/html"
echo ""

echo '<h1>Weather guessing game</h1>'

# Form to take user input
echo '
<form method="POST">
    <label for="temp">Guess the temperature in ' $city ':</label>
    <input type="number" name="tempInput" id="temp">
    <button type="submit">Submit</button>
</form>'

# Check if a temperature has been submitted
if [ -n "$QUERY_STRING" ]; then
    # Extract the guessed temperature from the query string
    temp_guess=$(echo "$QUERY_STRING" | sed -n 's/^.*tempInput=\([^&]*\).*$/\1/p')
    # Compare guessed temperature with actual temperature
    if (( $(echo "$temp_guess == $temp" | bc -l) )); then
        echo "<p>Correct! The temperature in $city is $temp°C.</p>"
    else
        echo "<p>Wrong! The temperature in $city is $temp°C, but you guessed $temp_guess°C.</p>"
    fi
    if [[ -z "$temp_guess" ]]; then
        echo "<p>Please submit a valid temperature guess.</p>"
    else
    fi
fi
